// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 32-bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Fri Jul  1 11:33:38 2016

SIMPLE SIMPLE_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.output1(output1_sig) ,	// output  output1_sig
	.output2(output2_sig) ,	// output  output2_sig
	.output3(output3_sig) ,	// output  output3_sig
	.output4(output4_sig) ,	// output  output4_sig
	.output5(output5_sig) ,	// output  output5_sig
	.output6(output6_sig) ,	// output  output6_sig
	.output7(output7_sig) ,	// output  output7_sig
	.output8(output8_sig) ,	// output  output8_sig
	.output9(output9_sig) ,	// output  output9_sig
	.output10(output10_sig) ,	// output  output10_sig
	.output11(output11_sig) ,	// output  output11_sig
	.output12(output12_sig) ,	// output  output12_sig
	.output13(output13_sig) ,	// output  output13_sig
	.output14(output14_sig) ,	// output  output14_sig
	.output15(output15_sig) ,	// output  output15_sig
	.output16(output16_sig) ,	// output  output16_sig
	.output17(output17_sig) ,	// output  output17_sig
	.output18(output18_sig) ,	// output  output18_sig
	.output19(output19_sig) ,	// output  output19_sig
	.output21(output21_sig) ,	// output  output21_sig
	.output22(output22_sig) ,	// output  output22_sig
	.output23(output23_sig) ,	// output  output23_sig
	.output24(output24_sig) ,	// output  output24_sig
	.output25(output25_sig) ,	// output  output25_sig
	.output26(output26_sig) ,	// output  output26_sig
	.output27(output27_sig) ,	// output  output27_sig
	.output28(output28_sig) ,	// output  output28_sig
	.output20(output20_sig) ,	// output  output20_sig
	.pin_name1(pin_name1_sig) ,	// output  pin_name1_sig
	.pin_name2(pin_name2_sig) ,	// output  pin_name2_sig
	.pin_name3(pin_name3_sig) ,	// output  pin_name3_sig
	.pin_name4(pin_name4_sig) ,	// output  pin_name4_sig
	.pin_name5(pin_name5_sig) 	// output  pin_name5_sig
);

