# do SIMPLE_run_msim_gate_vhdl.do 
# if {[file exists gate_work]} {
# 	vdel -lib gate_work -all
# }
# vlib gate_work
# vmap work gate_work
# Copying /opt/altera/13.0sp1/modelsim_ase/linux/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied /opt/altera/13.0sp1/modelsim_ase/linux/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {SIMPLE.vho}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package VITAL_Timing
# -- Loading package VITAL_Primitives
# -- Loading package cyclone_atom_pack
# -- Loading package cyclone_components
# -- Compiling entity pc
# -- Compiling architecture structure of pc
# 
vsim -do SIMPLE_run_msim_gate_vhdl.do -l msim_transcript -i gate_work.pc
# vsim -do SIMPLE_run_msim_gate_vhdl.do -l msim_transcript -i gate_work.pc 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.vital_timing(body)
# Loading ieee.vital_primitives(body)
# Loading cyclone.cyclone_atom_pack(body)
# Loading cyclone.cyclone_components
# Loading gate_work.pc(structure)
# Loading ieee.std_logic_arith(body)
# Loading cyclone.cyclone_io(structure)
# Loading cyclone.cyclone_mux21(altvital)
# Loading cyclone.cyclone_dffe(behave)
# Loading cyclone.cyclone_asynch_io(behave)
# Loading cyclone.cyclone_lcell(vital_le_atom)
# Loading cyclone.cyclone_asynch_lcell(vital_le)
# Loading cyclone.cyclone_lcell_register(vital_le_reg)
# do SIMPLE_run_msim_gate_vhdl.do 
# if {[file exists gate_work]} {
# 	vdel -lib gate_work -all
# }
# vlib gate_work
# vmap work gate_work
# Modifying modelsim.ini
# 
# vcom -93 -work work {SIMPLE.vho}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package VITAL_Timing
# -- Loading package VITAL_Primitives
# -- Loading package cyclone_atom_pack
# -- Loading package cyclone_components
# -- Compiling entity pc
# -- Compiling architecture structure of pc
# 
# Load canceled
add wave -position end  sim:/pc/clk
# ** Error: Unable to lock WLF file "vsim.wlf". Retrying 1 times, errno 11
# ** Error: Unable to lock WLF file "vsim.wlf". Retrying 2 times, errno 11
# ** Error: Unable to lock WLF file "vsim.wlf". Retrying 3 times, errno 11
# ** Error: Cannot lock WLF file: "vsim.wlf"
#           errno 11: Resource temporarily unavailable.
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: a0147801  Hostname: ws01  ProcessID: 4595
#           Attempting to use alternate WLF file "./wlftYwXI6d".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftYwXI6d
force -freeze sim:/pc/clk 1 0, 0 {50 ps} -r 100
add wave -position end  sim:/pc/pc_in
add wave -position end  sim:/pc/pc_out
# FATAL ERROR: Unable to read lock file necessary for use of uncounted nodelocked license. Exiting.
